scalar GraphQLDate

enum Increments {
  Daily
  Weekly
}

type User {
  _id: ID!
  name: String!
  email: String!
  habitList: [Habit!]
  deletedHabits: [Habit!]
  completedHabits: [Habit!]
}

type Habit {
  _id: ID!
  title: String!
  increments: Increments!
  created: GraphQLDate!
  isGood: Boolean!
  count: Int!
  isDone: Boolean!
}

" For inserting a new User into the database"
input UserInput {
  name: String!
  email: String!
}

" Mandatory inputs for creating a new Habit"
input HabitInputs {
  title: String!
  increments: Increments!
  isGood: Boolean!
}

"Optional Inputs for Editing/Updating an existing habit"
input HabitUpdateInputs {
  title: String
  increments: Increments
  isGood: Boolean
  isDone: Boolean
}

##### Top level declarations
type Query {
  users: [User!]
  user(email: String): User
  userHabits(email: String!): [Habit!]
  completedHabits(email: String): [Habit!]
  deletedHabits(email: String): [Habit!]
}
type Mutation {
  insertUser(user: UserInput!): User!
  insertHabit(email: String!, habit: HabitInputs): [Habit!]!
}
