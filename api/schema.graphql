scalar GraphQLDate

enum Increments {
  Daily
  Weekly
}

type User {
  _id: ID!
  name: String!
  email: String!
  habitList: [Habit!]
  deletedHabits: [Habit!]
  completedHabits: [Habit!]
}

type Habit {
  id: Int!
  title: String!
  increments: Increments!
  created: GraphQLDate!
  isGood: Boolean!
  count: Int!
  isDone: Boolean!
}

input UserInput {
  name: String!
  email: String!
}

" Mandatory inputs for creating a new Habit"
input HabitInputs {
  title: String!
  increments: Increments!
  isGood: Boolean!
}

"Optional Inputs for Editing/Updating an existing habit"
input HabitUpdateInputs {
  title: String
  increments: Increments
  isGood: Boolean
  isDone: Boolean
}

##### Top level declarations
type Query {
  user(email: String): User
  users: [User!]
  habitsList(
    title: String
    isGood: Boolean
    increments: Increments
    count: Int
    created: GraphQLDate
    id: Int
    isDone: Boolean
  ): [Habit!]!
  userHabits(email: String!): [Habit!]
  habit(id: Int!): Habit!
  completedHabits(
    id: Int
    title: String
    isGood: Boolean
    isDone: Boolean
  ): [Habit!]!
}
type Mutation {
  insertUser(user: UserInput!): User!
}
